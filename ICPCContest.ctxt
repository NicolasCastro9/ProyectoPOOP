#BlueJ class context
comment0.target=ICPCContest
comment0.text=\r\n\ Write\ a\ description\ of\ class\ ICPCContest\ here.\r\n\ \r\n\ @author\ (Nicol\u00E1s\ Castro\ Jaramillo\ y\ Marco\ Antonio\ Alvarez)\ \r\n\ @version\ \ 4.0\ (22/10/2022)\r\n
comment1.params=
comment1.target=ICPCContest()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ ICPCContest\r\n
comment2.params=cost\ routesSpeedLimits
comment2.target=int\ solve(int,\ int[][])
comment2.text=\r\n\ Metodo\ que\ resuelve\ el\ problema\ B\ de\ ICPC\r\n\ @param\ cost\ es\ el\ costo\ por\ cada\ se\u00F1al\r\n\ @param\ routesSpeedLimits\ es\ la\ matriz\ que\ contiene\ las\ intersecciones\ y\ la\ velocidad\ permitida\ entre\ las\ rutas\r\n\ @return\ solution\ retorna\ solution1\ si\ sale\ mas\ barato\ colocar\ se\u00F1ales\ o\ solution2\ \ si\ sale\ mas\ barato\ aumentar\ la\ velocidad\ permitida\ de\ las\ rutas\r\n
comment3.params=cost\ routesSpeedLimits
comment3.target=void\ simulate(int,\ int[][])
comment3.text=\r\n\ metodo\ que\ simula\ la\ solucion\ del\ problemaB\ de\ ICPC\ pero\ sin\ solucionar\ directamente\ el\ problema\r\n\ @param\ cost\ es\ el\ costo\ por\ cada\ se\u00F1al\r\n\ @param\ routesSpeedLimits\ es\ la\ matriz\ que\ contiene\ las\ intersecciones\ y\ la\ velocidad\ permitida\ entre\ las\ rutas\r\n
comment4.params=
comment4.target=boolean\ ok()
comment4.text=\r\n\ metodo\ que\ devuelve\ true\ si\ el\ ultimo\ procedimiento\ se\ realizo\ con\ exito.\r\n
numComments=5
